"""add mimetype

Revision ID: 7d10a46c8880
Revises: 89f9206c5d2a
Create Date: 2025-03-10 14:10:52.728493

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # added

import mimetypes


# revision identifiers, used by Alembic.
revision: str = "7d10a46c8880"
down_revision: Union[str, None] = "89f9206c5d2a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("image", sa.Column("mimetype", sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###

    # Get DB connection
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT id, filepath FROM image"))

    # Update the column with mimetypes
    updates = []
    for row in result:
        file_path = row.filepath
        mimetype, _ = mimetypes.guess_type(file_path)
        mimetype = mimetype or "application/octet-stream"  # Default if unknown
        updates.append({"id": row.id, "mimetype": mimetype})

    # Perform batch update
    for update in updates:
        connection.execute(
            sa.text("UPDATE image SET mimetype = :mimetype WHERE id = :id"),
            {"mimetype": update["mimetype"], "id": update["id"]},
        )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("image", "mimetype")
    # ### end Alembic commands ###
